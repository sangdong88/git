# 2021-04-06 화

1. git 을 설치 한다. 설치 path는 %appdata / Local / user *** 경로로 해줘야 vscode에서 자동인식 가능하다.
2. vscode에선 유용한 기능인 gitlens와 git histoty extention을 설치 해준다.
3. vscode에서 .git 파일 경로를 어디로 하는지가 상당히 중요하다
    왜냐면 필요 이상의 git파일들이 stage change 를 기다리고 있기 때문이다 불필요. 5k 이상의 git 파일들이
    그래서 특정 폴더 (내가 git 파일을 관리하고 커밋할 폴더를 지정해주는 것이 좋다.)

# git bash 에서 git hub 지우는 법
.git 이 있는 경로로 cd를 통해 이동한다.
ls -a 명령으로 .git 파일이 있는지 확인한다.
rm -rf .git 명령으로 .git 파일 삭제
원하는 경로로 이동한다.
git init 으로 초기화 해준다. 해당 폴더에 .git파일이 생성된 것을 확인한다

# vscode에서 github랑 remote repository 연동하는 방법
1. 컨트롤 쉬프트 P를 누르고 Git add remote 선택
2. URL은 github에 지정된 repository의 URL 복사 붙여넣기
3. remote name은 origin으로 입력 해준다.
4. github에서 연동 할건지 아이디 비밀 번호 확인 작업 후에 연동

# git bash에서 github랑 remote repository 연동하는 방법
1. git remote add origin [Github URL] / 원격 저장소 연결 정보 추가


# remote 저장소에 있는 file pull (내용 가져오기)
컨트롤 쉬프트 P 누르고 Git: pull 선택
Source control 오른쪽 점 3개 pull 선택

# remote 저장소에 파일 push 하기 (내용 업로드 하기)
컨트롤 쉬프트 P 누르고 Git: push 선택
Source control 오른쪽 점 3개 push 선택

# 그 외 git bash 명령어들

git config --global user.name "Sangdong Lee" / 유저이름 등록
git config --global user.email "leehlo@naver.com" / 이메일 등록
git config --global -l / config --global 리스트 확인

Ctrl + L / 커맨드창 화면 초기화
Ctrl + A / 명령어 맨 앞으로 커서 이동
Ctrl + E / 명령어 맨 뒤로 커서 이동

cd [이동경로] / change directory
mkdir [경로/디렉터리명] / make directory
git rm -rf [경로/삭제할디렉토리 혹은 파일이름] / remove
dir / 목록 조회 
ls / list
cat [파일명] / 파일 내용 조회

### remote ###
git init / 리모트 저장소 초기화 현재 경로에 .git 파일 생성 됨
git remote add origin [Github URL] / Github 원격저장소 연결 정보 추가
git remote 
git remote -v / 리모트 저장소 연결조회
git remote rm [삭제할 리모트 저장소이름] / 리모트 저장소 이름 삭제
git remote show [저장소이름] / 리모트 저장소 연결정보 조회
git config --get remote.[저장소이름].url / 리모트 저장소 연결정보 url만 조회
git remote set-url [리모트 저장소이름] [url주소] / 리모트 저장소 연결 정보 url 수정
git remote rename [기존 리모트 저장소이름] [변경할 리모트 저장소 이름] / 리모트 저장소 이름 변경
git push [리모트 저장소이름] --delete [삭제할 브랜치이름] 

### add ###
git add [파일이름] / 가상저장소로 stage change 1개 파일 이동
git add . / 전체 파일을 가상저장소로 stage change 
!!! commit 전 항상 commit 할 파일들을 가상 저장소로 add 해줘야 합니다. 

### reset ###
git reset / commit하려고 선택 되어 있는 파일 선택 취소
git reflog                      /
git reset --hard HEAD@{헤드숫자} /모든 커밋, 리셋 등 로그 이력 조회 조회된 헤드숫자를 확인하여 해당 시점으로 파일 복구 

### commit ###
git commit -a / add 생략하고 변경 사항 바로 commit 하기
git commit -m [커밋 메시지] / 변경 사항 Local repository 저장 커밋
git status / github 커밋 상태 조회
git log / github 커밋 이력 상세 조회
git log --oneline / 커밋 이력 중 커밋 ID, 타이틀만 조회
git log --oneline --decorate --graph --all / 모든 브랜치 커밋 이력 조회
git log --[파일이름] / 특정 파일 커밋 이력 조회
git fetch [리모트 저장소 이름] [브랜치이름] / fetch는 코드만 불러오는 것이고, pull은 fetch 된 다음 merge가 되는 차이.
git pull [리모트 저장소이름] [브랜치이름] / 리모트 저장소 변경사항 불러오기
git push [리모트 저장소이름] [브랜치이름] / 리모트 저장소 변경사항 올리기

### branch ###
git branch / 브랜치 확인 * 표시가 있는 것이 현재 checkout 된 branch
git branch -d branch_name / 로컬 브랜치 삭제하기
git branch -r / 리모트 저장소 브랜치 확인 
git push origin -d branch_name / 원격 브랜치 삭제하기
git push origin :branch_name / 원격 브랜치 삭제하기 2
git branch -a / 모든 저장소 브랜치 확인
git checkout -t [원격 저장소 이름 / 브랜치명] / 리모트 저장소의 브랜치 가져오기 예 [ origin/chemeez_test_branch1]
git branch [새 브랜치 명] / 새 브랜치 생성
git checkout [브랜치명] / 사용 할 브랜치 지정
git checkout -b [브랜치명] / 새 브랜치 생성과 사용 할 브랜치 지정 동시에 
!!! checkout이란, 내가 사용할 브랜치를 지정하는 것을 의미합니다.

### 
git init으로 각기 다른 디렉터리를 초기화 할 수 있다.
또한 리모트 저장소도 디렉터리별로 각기다른 github 폴더를 지정할 수 있다.





